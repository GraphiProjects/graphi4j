buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
  }
  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
  }
}

group = "$group"
version = "$version"

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  compile project(':graphi4j') ?: "graphi4j:graph4j:$graphi4jVersion"

  providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
}

// Enable debugging of gretty started webapp in IDEA
// For debuging a gradle task, IDEA creates a gradle init script (in /tmp/ijinit#.gradle), that sets JVM arguments
// to enable remote debugging.
// Unfortunately by default that only works for gradle tasks that implement JavaForkOptions - which gretty doesn't do.
// So parse the JVM args that IDEA uses from that init script and set them as JVM args to be used by gretty:
def debugArgs = []
if (gradle.startParameter.initScripts) {
  def line = file(gradle.startParameter.initScripts[0]).readLines().findAll({x -> x ==~ /.*-agentlib:jdwp=.*/ })[0]
  if (line) {
    debugArgs = ((line =~ /.*'(.*)'.*/)[0][1] as String).split(' ')
  }
}

gretty {
  jvmArgs = [*debugArgs]
  httpPort = 8080
  contextPath = '/'
  servletContainer = 'jetty9'
}
